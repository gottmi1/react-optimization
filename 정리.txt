컴포넌트가 재실행되면(props나 state 컨텍스트등이 바뀌면)
그 컴포넌트의 모든 자식 컴포넌트 역시 재실행,재평가 된다.

상태가 바뀌지않는 자식 컴포넌트들도 모두 재실행 해버림.
이 때 예외로 두고싶은 컴포넌트는 React.memo를 사용하여 업데이트되지 않게 한다.

React.memo사용법 : export 할 때 컴포넌트를 묶는다
export default React.memo(DemoOutput); 이렇게.
이 컴포넌트이 재실행을 막는 것이므로 자식 컴포넌트도 재실행되지 않는다.

이렇게 편리한데 모든 컴포넌트에 사용하지않는 이유? cost가 발생해서.
App.js에 변경이 발생할 때 마다 해당 컴포넌트로 이동하여 기존 props값과 새로운 값을 비교한다.
이럴려면 기존의 props를 저장할 공간이 필요하고 비교하는 작업도 필요하기 때문에 모든 곳에 쓸수는 없음
자식 컴포넌트가 많아서 트리의 크기가 매우 클때 유용하다.

그러나 부모 컴포넌트를 재실행 할 때마다 변경이 있거나 하는 경우 React.memo는 의미가 없음.